body {
    font-family: 'Inter', sans-serif;
    background-color: #f8fafc; /* slate-50 */
}
.card {
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}
.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}
.filter-btn {
     transition: all 0.2s ease-in-out;
     border: 1px solid transparent;
}
.filter-btn.active {
    background-color: #1e293b; /* slate-800 */
    color: white;
    border-color: #1e293b; /* slate-800 */
}
.filter-btn:not(.active):hover {
    border-color: #cbd5e1; /* slate-300 */
}
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}
.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}
.modal-content {
    background-color: white;
    padding: 2rem;
    border-radius: 0.75rem;
    width: 90%;
    max-width: 48rem; /* lg */
    max-height: 90vh;
    overflow-y: auto;
    transform: scale(0.95);
    transition: transform 0.3s ease;
}
.modal-overlay.active .modal-content {
    transform: scale(1);
}
/* Styles for rendered markdown content in modal */
.modal-markdown h3 {
    font-size: 1.125rem; /* text-lg */
    font-weight: 600; /* font-semibold */
    color: #334155; /* slate-700 */
    margin-top: 1.5rem; /* mt-6 */
    margin-bottom: 0.5rem; /* mb-2 */
    border-bottom: 1px solid #e2e8f0; /* slate-200 */
    padding-bottom: 0.5rem;
}
.modal-markdown p {
    color: #475569; /* slate-600 */
    line-height: 1.625; /* leading-relaxed */
}

/* Responsive tweaks for header/auth area and buttons */
#auth-section {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

#auth-section > button,#auth-section > .rounded-full {
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

/* Make the add idea button and auth buttons fit on small screens */
#add-idea-btn {
    padding: 0.45rem 0.85rem;
    font-size: 0.95rem;
}

@media (max-width: 640px) {
    /* Stack header text compactly and keep auth controls to the right */
    header .flex-1 {
        min-width: 0;
    }
    header h1 {
        font-size: 1.5rem; /* smaller on small screens */
        margin-bottom: 0.25rem;
    }
    header p {
        font-size: 0.9rem;
        margin-bottom: 0;
    }
    #auth-section {
        gap: 0.4rem;
    }
    /* Ensure the add-idea button doesn't overflow and wraps nicely */
    #add-idea-btn {
        margin-right: 0.5rem !important;
        padding: 0.4rem 0.7rem;
        font-size: 0.85rem;
        white-space: nowrap;
    display: none; /* hide header add button on small screens; mobile menu will provide it */
    }
    /* Modal content should occupy most of the small screen width */
    .modal-content {
        width: 95%;
        padding: 1rem;
    }
}

/* Mobile menu styles */
.mobile-menu {
    position: absolute;
    top: 4.25rem; /* below header */
    right: 1rem;
    background: white;
    border: 1px solid #e6edf3;
    border-radius: 0.5rem;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.07);
    min-width: 12rem;
    z-index: 60;
    display: none;
}
.mobile-menu.active {
    display: block;
}
.mobile-menu button {
    width: 100%;
    text-align: left;
    background: transparent;
    border: none;
    padding: 0.5rem 0.75rem;
}
.mobile-menu button:hover,
.mobile-menu .menu-item:hover {
    background-color: #f1f5f9; /* light slate */
}
.mobile-menu .menu-item.active,
.mobile-menu button[data-active="true"] {
    background-color: #e2e8f0; /* slightly darker when active */
    font-weight: 600;
}
.mobile-menu .menu-item + .menu-item {
    border-top: 1px solid #f1f5f9;
}

.prose {
  color: #374151;
  max-width: 65ch;
}
.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: #5850ec;
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
}
.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  padding-left: 1.625em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: #6b7280;
}
.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  padding-left: 1.625em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: #d1d5db;
}
.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: #e5e7eb;
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: #111827;
  border-left-width: 0.25rem;
  border-left-color: #e5e7eb;
  quotes: "\201C""\201D""\2018""\2019";
  padding-left: 1em;
}
.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: #6b7280;
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: #e5e7eb;
  background-color: #1f2937;
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding: 0.8571429em 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: "";
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: "";
}
.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: #d1d5db;
}
.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: #e5e7eb;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)):last-child {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
  padding: 0.5714286em;
}
.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose > :first-child {
  margin-top: 0;
}
.prose > :last-child {
  margin-bottom: 0;
}